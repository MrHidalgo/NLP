/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$sp-lock-name: 'sp-Lock';
$sp-lock-x: 0px;
$sp-lock-y: 0px;
$sp-lock-offset-x: 0px;
$sp-lock-offset-y: 0px;
$sp-lock-width: 24px;
$sp-lock-height: 30px;
$sp-lock-total-width: 28px;
$sp-lock-total-height: 277px;
$sp-lock-image: '../img/sprite_NLP.png';
$sp-lock: (0px, 0px, 0px, 0px, 24px, 30px, 28px, 277px, '../img/sprite_NLP.png', 'sp-Lock', );
$sp-unlock-name: 'sp-Unlock';
$sp-unlock-x: 0px;
$sp-unlock-y: 35px;
$sp-unlock-offset-x: 0px;
$sp-unlock-offset-y: -35px;
$sp-unlock-width: 24px;
$sp-unlock-height: 30px;
$sp-unlock-total-width: 28px;
$sp-unlock-total-height: 277px;
$sp-unlock-image: '../img/sprite_NLP.png';
$sp-unlock: (0px, 35px, 0px, -35px, 24px, 30px, 28px, 277px, '../img/sprite_NLP.png', 'sp-Unlock', );
$sp-i-comunity-hover-name: 'sp-i-comunity-hover';
$sp-i-comunity-hover-x: 0px;
$sp-i-comunity-hover-y: 70px;
$sp-i-comunity-hover-offset-x: 0px;
$sp-i-comunity-hover-offset-y: -70px;
$sp-i-comunity-hover-width: 28px;
$sp-i-comunity-hover-height: 18px;
$sp-i-comunity-hover-total-width: 28px;
$sp-i-comunity-hover-total-height: 277px;
$sp-i-comunity-hover-image: '../img/sprite_NLP.png';
$sp-i-comunity-hover: (0px, 70px, 0px, -70px, 28px, 18px, 28px, 277px, '../img/sprite_NLP.png', 'sp-i-comunity-hover', );
$sp-i-comunity-name: 'sp-i-comunity';
$sp-i-comunity-x: 0px;
$sp-i-comunity-y: 93px;
$sp-i-comunity-offset-x: 0px;
$sp-i-comunity-offset-y: -93px;
$sp-i-comunity-width: 28px;
$sp-i-comunity-height: 18px;
$sp-i-comunity-total-width: 28px;
$sp-i-comunity-total-height: 277px;
$sp-i-comunity-image: '../img/sprite_NLP.png';
$sp-i-comunity: (0px, 93px, 0px, -93px, 28px, 18px, 28px, 277px, '../img/sprite_NLP.png', 'sp-i-comunity', );
$sp-i-diary-hover-name: 'sp-i-diary-hover';
$sp-i-diary-hover-x: 0px;
$sp-i-diary-hover-y: 116px;
$sp-i-diary-hover-offset-x: 0px;
$sp-i-diary-hover-offset-y: -116px;
$sp-i-diary-hover-width: 18px;
$sp-i-diary-hover-height: 26px;
$sp-i-diary-hover-total-width: 28px;
$sp-i-diary-hover-total-height: 277px;
$sp-i-diary-hover-image: '../img/sprite_NLP.png';
$sp-i-diary-hover: (0px, 116px, 0px, -116px, 18px, 26px, 28px, 277px, '../img/sprite_NLP.png', 'sp-i-diary-hover', );
$sp-i-diary-name: 'sp-i-diary';
$sp-i-diary-x: 0px;
$sp-i-diary-y: 147px;
$sp-i-diary-offset-x: 0px;
$sp-i-diary-offset-y: -147px;
$sp-i-diary-width: 18px;
$sp-i-diary-height: 26px;
$sp-i-diary-total-width: 28px;
$sp-i-diary-total-height: 277px;
$sp-i-diary-image: '../img/sprite_NLP.png';
$sp-i-diary: (0px, 147px, 0px, -147px, 18px, 26px, 28px, 277px, '../img/sprite_NLP.png', 'sp-i-diary', );
$sp-i-facebook-name: 'sp-i-facebook';
$sp-i-facebook-x: 0px;
$sp-i-facebook-y: 178px;
$sp-i-facebook-offset-x: 0px;
$sp-i-facebook-offset-y: -178px;
$sp-i-facebook-width: 12px;
$sp-i-facebook-height: 20px;
$sp-i-facebook-total-width: 28px;
$sp-i-facebook-total-height: 277px;
$sp-i-facebook-image: '../img/sprite_NLP.png';
$sp-i-facebook: (0px, 178px, 0px, -178px, 12px, 20px, 28px, 277px, '../img/sprite_NLP.png', 'sp-i-facebook', );
$sp-i-training-hover-name: 'sp-i-training-hover';
$sp-i-training-hover-x: 0px;
$sp-i-training-hover-y: 203px;
$sp-i-training-hover-offset-x: 0px;
$sp-i-training-hover-offset-y: -203px;
$sp-i-training-hover-width: 26px;
$sp-i-training-hover-height: 26px;
$sp-i-training-hover-total-width: 28px;
$sp-i-training-hover-total-height: 277px;
$sp-i-training-hover-image: '../img/sprite_NLP.png';
$sp-i-training-hover: (0px, 203px, 0px, -203px, 26px, 26px, 28px, 277px, '../img/sprite_NLP.png', 'sp-i-training-hover', );
$sp-i-training-name: 'sp-i-training';
$sp-i-training-x: 0px;
$sp-i-training-y: 234px;
$sp-i-training-offset-x: 0px;
$sp-i-training-offset-y: -234px;
$sp-i-training-width: 26px;
$sp-i-training-height: 26px;
$sp-i-training-total-width: 28px;
$sp-i-training-total-height: 277px;
$sp-i-training-image: '../img/sprite_NLP.png';
$sp-i-training: (0px, 234px, 0px, -234px, 26px, 26px, 28px, 277px, '../img/sprite_NLP.png', 'sp-i-training', );
$sp-i-vk-name: 'sp-i-vk';
$sp-i-vk-x: 0px;
$sp-i-vk-y: 265px;
$sp-i-vk-offset-x: 0px;
$sp-i-vk-offset-y: -265px;
$sp-i-vk-width: 20px;
$sp-i-vk-height: 12px;
$sp-i-vk-total-width: 28px;
$sp-i-vk-total-height: 277px;
$sp-i-vk-image: '../img/sprite_NLP.png';
$sp-i-vk: (0px, 265px, 0px, -265px, 20px, 12px, 28px, 277px, '../img/sprite_NLP.png', 'sp-i-vk', );
$sp-lock-2x-name: 'sp-Lock@2x';
$sp-lock-2x-x: 0px;
$sp-lock-2x-y: 0px;
$sp-lock-2x-offset-x: 0px;
$sp-lock-2x-offset-y: 0px;
$sp-lock-2x-width: 48px;
$sp-lock-2x-height: 60px;
$sp-lock-2x-total-width: 56px;
$sp-lock-2x-total-height: 554px;
$sp-lock-2x-image: '../img/sprite_NLP@2x.png';
$sp-lock-2x: (0px, 0px, 0px, 0px, 48px, 60px, 56px, 554px, '../img/sprite_NLP@2x.png', 'sp-Lock@2x', );
$sp-unlock-2x-name: 'sp-Unlock@2x';
$sp-unlock-2x-x: 0px;
$sp-unlock-2x-y: 70px;
$sp-unlock-2x-offset-x: 0px;
$sp-unlock-2x-offset-y: -70px;
$sp-unlock-2x-width: 48px;
$sp-unlock-2x-height: 60px;
$sp-unlock-2x-total-width: 56px;
$sp-unlock-2x-total-height: 554px;
$sp-unlock-2x-image: '../img/sprite_NLP@2x.png';
$sp-unlock-2x: (0px, 70px, 0px, -70px, 48px, 60px, 56px, 554px, '../img/sprite_NLP@2x.png', 'sp-Unlock@2x', );
$sp-i-comunity-hover-2x-name: 'sp-i-comunity-hover@2x';
$sp-i-comunity-hover-2x-x: 0px;
$sp-i-comunity-hover-2x-y: 140px;
$sp-i-comunity-hover-2x-offset-x: 0px;
$sp-i-comunity-hover-2x-offset-y: -140px;
$sp-i-comunity-hover-2x-width: 56px;
$sp-i-comunity-hover-2x-height: 36px;
$sp-i-comunity-hover-2x-total-width: 56px;
$sp-i-comunity-hover-2x-total-height: 554px;
$sp-i-comunity-hover-2x-image: '../img/sprite_NLP@2x.png';
$sp-i-comunity-hover-2x: (0px, 140px, 0px, -140px, 56px, 36px, 56px, 554px, '../img/sprite_NLP@2x.png', 'sp-i-comunity-hover@2x', );
$sp-i-comunity-2x-name: 'sp-i-comunity@2x';
$sp-i-comunity-2x-x: 0px;
$sp-i-comunity-2x-y: 186px;
$sp-i-comunity-2x-offset-x: 0px;
$sp-i-comunity-2x-offset-y: -186px;
$sp-i-comunity-2x-width: 56px;
$sp-i-comunity-2x-height: 36px;
$sp-i-comunity-2x-total-width: 56px;
$sp-i-comunity-2x-total-height: 554px;
$sp-i-comunity-2x-image: '../img/sprite_NLP@2x.png';
$sp-i-comunity-2x: (0px, 186px, 0px, -186px, 56px, 36px, 56px, 554px, '../img/sprite_NLP@2x.png', 'sp-i-comunity@2x', );
$sp-i-diary-hover-2x-name: 'sp-i-diary-hover@2x';
$sp-i-diary-hover-2x-x: 0px;
$sp-i-diary-hover-2x-y: 232px;
$sp-i-diary-hover-2x-offset-x: 0px;
$sp-i-diary-hover-2x-offset-y: -232px;
$sp-i-diary-hover-2x-width: 36px;
$sp-i-diary-hover-2x-height: 52px;
$sp-i-diary-hover-2x-total-width: 56px;
$sp-i-diary-hover-2x-total-height: 554px;
$sp-i-diary-hover-2x-image: '../img/sprite_NLP@2x.png';
$sp-i-diary-hover-2x: (0px, 232px, 0px, -232px, 36px, 52px, 56px, 554px, '../img/sprite_NLP@2x.png', 'sp-i-diary-hover@2x', );
$sp-i-diary-2x-name: 'sp-i-diary@2x';
$sp-i-diary-2x-x: 0px;
$sp-i-diary-2x-y: 294px;
$sp-i-diary-2x-offset-x: 0px;
$sp-i-diary-2x-offset-y: -294px;
$sp-i-diary-2x-width: 36px;
$sp-i-diary-2x-height: 52px;
$sp-i-diary-2x-total-width: 56px;
$sp-i-diary-2x-total-height: 554px;
$sp-i-diary-2x-image: '../img/sprite_NLP@2x.png';
$sp-i-diary-2x: (0px, 294px, 0px, -294px, 36px, 52px, 56px, 554px, '../img/sprite_NLP@2x.png', 'sp-i-diary@2x', );
$sp-i-facebook-2x-name: 'sp-i-facebook@2x';
$sp-i-facebook-2x-x: 0px;
$sp-i-facebook-2x-y: 356px;
$sp-i-facebook-2x-offset-x: 0px;
$sp-i-facebook-2x-offset-y: -356px;
$sp-i-facebook-2x-width: 24px;
$sp-i-facebook-2x-height: 40px;
$sp-i-facebook-2x-total-width: 56px;
$sp-i-facebook-2x-total-height: 554px;
$sp-i-facebook-2x-image: '../img/sprite_NLP@2x.png';
$sp-i-facebook-2x: (0px, 356px, 0px, -356px, 24px, 40px, 56px, 554px, '../img/sprite_NLP@2x.png', 'sp-i-facebook@2x', );
$sp-i-training-hover-2x-name: 'sp-i-training-hover@2x';
$sp-i-training-hover-2x-x: 0px;
$sp-i-training-hover-2x-y: 406px;
$sp-i-training-hover-2x-offset-x: 0px;
$sp-i-training-hover-2x-offset-y: -406px;
$sp-i-training-hover-2x-width: 52px;
$sp-i-training-hover-2x-height: 52px;
$sp-i-training-hover-2x-total-width: 56px;
$sp-i-training-hover-2x-total-height: 554px;
$sp-i-training-hover-2x-image: '../img/sprite_NLP@2x.png';
$sp-i-training-hover-2x: (0px, 406px, 0px, -406px, 52px, 52px, 56px, 554px, '../img/sprite_NLP@2x.png', 'sp-i-training-hover@2x', );
$sp-i-training-2x-name: 'sp-i-training@2x';
$sp-i-training-2x-x: 0px;
$sp-i-training-2x-y: 468px;
$sp-i-training-2x-offset-x: 0px;
$sp-i-training-2x-offset-y: -468px;
$sp-i-training-2x-width: 52px;
$sp-i-training-2x-height: 52px;
$sp-i-training-2x-total-width: 56px;
$sp-i-training-2x-total-height: 554px;
$sp-i-training-2x-image: '../img/sprite_NLP@2x.png';
$sp-i-training-2x: (0px, 468px, 0px, -468px, 52px, 52px, 56px, 554px, '../img/sprite_NLP@2x.png', 'sp-i-training@2x', );
$sp-i-vk-2x-name: 'sp-i-vk@2x';
$sp-i-vk-2x-x: 0px;
$sp-i-vk-2x-y: 530px;
$sp-i-vk-2x-offset-x: 0px;
$sp-i-vk-2x-offset-y: -530px;
$sp-i-vk-2x-width: 40px;
$sp-i-vk-2x-height: 24px;
$sp-i-vk-2x-total-width: 56px;
$sp-i-vk-2x-total-height: 554px;
$sp-i-vk-2x-image: '../img/sprite_NLP@2x.png';
$sp-i-vk-2x: (0px, 530px, 0px, -530px, 40px, 24px, 56px, 554px, '../img/sprite_NLP@2x.png', 'sp-i-vk@2x', );
$spritesheet-width: 28px;
$spritesheet-height: 277px;
$spritesheet-image: '../img/sprite_NLP.png';
$spritesheet-sprites: ($sp-lock, $sp-unlock, $sp-i-comunity-hover, $sp-i-comunity, $sp-i-diary-hover, $sp-i-diary, $sp-i-facebook, $sp-i-training-hover, $sp-i-training, $sp-i-vk, );
$spritesheet: (28px, 277px, '../img/sprite_NLP.png', $spritesheet-sprites, );
$retina-spritesheet-width: 56px;
$retina-spritesheet-height: 554px;
$retina-spritesheet-image: '../img/sprite_NLP@2x.png';
$retina-spritesheet-sprites: ($sp-lock-2x, $sp-unlock-2x, $sp-i-comunity-hover-2x, $sp-i-comunity-2x, $sp-i-diary-hover-2x, $sp-i-diary-2x, $sp-i-facebook-2x, $sp-i-training-hover-2x, $sp-i-training-2x, $sp-i-vk-2x, );
$retina-spritesheet: (56px, 554px, '../img/sprite_NLP@2x.png', $retina-spritesheet-sprites, );

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
$sp-lock-group-name: 'sp-Lock';
$sp-lock-group: ('sp-Lock', $sp-lock, $sp-lock-2x, );
$sp-unlock-group-name: 'sp-Unlock';
$sp-unlock-group: ('sp-Unlock', $sp-unlock, $sp-unlock-2x, );
$sp-i-comunity-hover-group-name: 'sp-i-comunity-hover';
$sp-i-comunity-hover-group: ('sp-i-comunity-hover', $sp-i-comunity-hover, $sp-i-comunity-hover-2x, );
$sp-i-comunity-group-name: 'sp-i-comunity';
$sp-i-comunity-group: ('sp-i-comunity', $sp-i-comunity, $sp-i-comunity-2x, );
$sp-i-diary-hover-group-name: 'sp-i-diary-hover';
$sp-i-diary-hover-group: ('sp-i-diary-hover', $sp-i-diary-hover, $sp-i-diary-hover-2x, );
$sp-i-diary-group-name: 'sp-i-diary';
$sp-i-diary-group: ('sp-i-diary', $sp-i-diary, $sp-i-diary-2x, );
$sp-i-facebook-group-name: 'sp-i-facebook';
$sp-i-facebook-group: ('sp-i-facebook', $sp-i-facebook, $sp-i-facebook-2x, );
$sp-i-training-hover-group-name: 'sp-i-training-hover';
$sp-i-training-hover-group: ('sp-i-training-hover', $sp-i-training-hover, $sp-i-training-hover-2x, );
$sp-i-training-group-name: 'sp-i-training';
$sp-i-training-group: ('sp-i-training', $sp-i-training, $sp-i-training-2x, );
$sp-i-vk-group-name: 'sp-i-vk';
$sp-i-vk-group: ('sp-i-vk', $sp-i-vk, $sp-i-vk-2x, );
$retina-groups: ($sp-lock-group, $sp-unlock-group, $sp-i-comunity-hover-group, $sp-i-comunity-group, $sp-i-diary-hover-group, $sp-i-diary-group, $sp-i-facebook-group, $sp-i-training-hover-group, $sp-i-training-group, $sp-i-vk-group, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
@mixin sprite-background-size($sprite) {
  $sprite-total-width: nth($sprite, 7);
  $sprite-total-height: nth($sprite, 8);
  background-size: $sprite-total-width $sprite-total-height;
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: nth($retina-group, 2);
  $retina-sprite: nth($retina-group, 3);
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
@mixin retina-sprites($retina-groups) {
  @each $retina-group in $retina-groups {
    $sprite-name: nth($retina-group, 1);
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
